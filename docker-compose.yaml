services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/ollama_data:/root/.ollama
    networks:
      - my_network
    ports:
      - "11434:11434"
    
  open-webui:
    image: ghcr.io/open-webui/open-webui:ollama
    container_name: open-webui
    ports:
      - "3000:8080"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/ollama_data:/root/.ollama
      - ${DOCKER_VOLUME_DIRECTORY:-.}/open-webui:/app/backend/data
    networks:
      - my_network

  open-webui2:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui2
    ports:
      - "3003:8080"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/open-webui2:/app/backend/data
      - ./config.yaml:/app/backend/settings/config.yaml
    networks:
      - my_network

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    networks:
      - my_network
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    networks:
      - my_network
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.4.14
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    networks:
      - my_network
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
      
  attu:
    container_name: attu
    image: zilliz/attu:v2.2.8
    networks:
      - my_network
    environment:
      MILVUS_URL: milvus:19530
    ports:
      - "8000:3000"
    depends_on:
      - "milvus"

  langchain:
    build:
      context: .
      dockerfile: Dockerfile.app
    image: local/langchain:v0.2
    container_name: langchain
    networks:
      - my_network
    ports:
      - "8009:8000"
    depends_on:
      - ollama
      - milvus
    environment:
      - MILVUS_URI=http://milvus:19530
      - EMBEDDING_MODEL_NAME=${EMBEDDING_MODEL_NAME}
      - LLM_MODEL_NAME=${LLM_MODEL_NAME}

networks:
  my_network:
